<Application x:Class="ControlWithController.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:CodeGenerater.Diablo3.ControlWithController"
             StartupUri="MainWindow.xaml">
	<Application.Resources>

		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
									<EasingColorKeyFrame KeyTime="0" Value="Black"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed"/>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualState x:Name="Checked"/>
						<VisualState x:Name="Unchecked"/>
						<VisualState x:Name="Indeterminate"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="Black"/>
				<Border Grid.Column="0" Margin="1" Background="Black"/>
				<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="White"/>
			</Grid>
		</ControlTemplate>

		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
		</ControlTemplate>

		<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="MinHeight" Value="20"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="PART_EditableTextBox">
												<EasingColorKeyFrame KeyTime="0" Value="Black"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Uneditable"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press"
										  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
											  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
											  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
											  Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
							<TextBox x:Name="PART_EditableTextBox" Foreground="White"
									 Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"
									 HorizontalAlignment="Center" VerticalAlignment="Center"
									 Margin="3,3,23,3" Focusable="True" Background="Transparent"
									 Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
							<Popup x:Name="Popup" Placement="Bottom"
								   IsOpen="{TemplateBinding IsDropDownOpen}"
								   AllowsTransparency="False" Focusable="False" PopupAnimation="Slide">
								<Grid x:Name="DropDown" SnapsToDevicePixels="True"
									  MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="White" Background="Black"/>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
								<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard Storyboard.TargetName="Border">
											<ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="White" Duration="0:0:0.1"/>
											<ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="Black" Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="Wheat"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="Black"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="Black"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="White"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="RadioButton">
			<Setter Property="Margin" Value="2"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		
		<Style TargetType="CheckBox">
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		
		<Style TargetType="TextBox">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Background" Value="Black"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextAlignment" Value="Center"/>
			<Setter Property="Margin" Value="5,1,5,1"/>
		</Style>
		
		<local:MacroBindingRuleConverter x:Key="MBRConverter"/>
		<local:StickBindingRuleConverter x:Key="SBRConverter"/>
		<local:KeyConverter x:Key="KeyConverter"/>
		<local:MouseButtonConverter x:Key="MBConverter"/>

		<SolidColorBrush Color="#FF151515" x:Key="RectangleFillBrush"/>
	</Application.Resources>
</Application>